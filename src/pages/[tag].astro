---
// src/pages/[tag].astro

// --- FRONTMATTER (Tu lógica está perfecta, no se cambia nada aquí) ---
import { getCollection } from "astro:content";
import Layout from "../layouts/main/Layout.astro";
import { Image } from "astro:assets";
import { dirname } from "node:path";
import PostCard from "../components/PostCard/PostCard.astro";
export const prerender = true;

export async function getStaticPaths() {
  const sectionTags = [
    "noticias", "paginas", "software", "gaming", "cine", "musica", "lectura",
  ];
  return sectionTags.map((tag) => ({
    params: { tag },
  }));
}

const { tag } = Astro.params;
const allPosts = await getCollection("blog");
const filteredPosts = allPosts.filter((post) =>
  post.data.tags.map((t) => t.toLowerCase()).includes(tag!.toLowerCase()),
);
const sortedPosts = filteredPosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
const latestPosts = sortedPosts.slice(0, 5);
const pageTitle = tag!.charAt(0).toUpperCase() + tag!.slice(1);

const allImages = await import.meta.glob(
  "/src/content/blog/**/*.{jpeg,jpg,png,gif,webp,svg}",
);

const postsWithImages = await Promise.all(
  latestPosts.map(async (post) => {
    const postDir = dirname(post.id);
    const searchPath = `/src/content/blog/${postDir}/`.toLowerCase();
    const imagePath = Object.keys(allImages).find((path) =>
      path.toLowerCase().startsWith(searchPath),
    );

    let coverImage = null;
    if (imagePath) {
      const imageModule = (await allImages[imagePath]()) as any;
      coverImage = imageModule.default;
    }

    return {
      ...post,
      data: {
        ...post.data,
        coverImage: coverImage,
      },
    };
  }),
);
---

<!-- El HTML solo debe estar UNA VEZ -->
<Layout
  title={`Sección: ${pageTitle}`}
  description={`Últimas 5 entradas sobre ${pageTitle} en Click Alternativo.`}
>
  <div class="section-container">
    <h1>Artículos sobre: <span>{pageTitle}</span></h1>

    {postsWithImages.length > 0 ? (
      <div class="posts-grid">
        {postsWithImages.map(post => (
          // CAMBIO CLAVE AQUÍ TAMBIÉN:
          <PostCard slug={post.slug} data={post.data} />
        ))}
      </div>
    ) : (
      <p>Aún no hay artículos en esta sección. ¡Vuelve pronto!.</p>
    )}
  </div>
</Layout>
<!-- --- ESTILOS SCSS CORREGIDOS --- -->
<style lang="scss">
  @use '../styles/variables' as var;

  /* --- Estilos Generales --- */
  .section-container {
    width: 100%;
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
    text-align: center;
    text-transform: uppercase;
    color: #fff;
    span {
      color: var.$primary-color;
    }
  }

  /* --- Estilos base (Móvil) --- */
  .posts-grid {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .post-card {
    display: flex;
    gap: 1rem;
    background-color: #2a2a2a;
    border: 1px solid #444;
    border-radius: 12px;
    padding: 1rem;
    transition: border-color 0.2s ease;

    &:hover {
      border-color: #555;
    }
  }

  .card-image-link { flex-shrink: 0; }
  .card-image, .image-placeholder {
    width: 80px; height: 80px; object-fit: cover; border-radius: 8px;
  }
  
  .card-content {
    display: flex; flex-direction: column; justify-content: center;
  }

  .card-title-link {
    text-decoration: none;
    h2 {
      font-size: 1.25rem; margin: 0 0 0.5rem 0; color: var.$primary-color; transition: color 0.2s ease;
    }
    &:hover h2 {
      color: lighten(var.$primary-color, 15%);
    }
  }

  .card-content p {
    font-size: 0.9rem; color: #ccc; margin: 0; line-height: 1.5;
  }

  .card-content time {
    font-size: 0.8rem; color: #aaa; margin-top: 0.5rem;
  }
  
  .external-link-wrapper { margin-top: 0.75rem; }
  .external-button {
    display: inline-block; background-color: #333; color: var.$primary-color; text-decoration: none;
    padding: 0.4rem 0.8rem; border-radius: 6px; font-size: 0.8rem; font-weight: bold;
    border: 1px solid #555; transition: background-color 0.2s ease, color 0.2s ease;
    &:hover {
      background-color: var.$primary-color; color: #121212;
    }
  }

  /* --- Estilos para Tablet y Superior (LA CUADRÍCULA) --- */
  @media (min-width: 768px) {
    /* AQUÍ SE DEFINE LA CUADRÍCULA PARA PC */
    .posts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }

    .post-card {
      flex-direction: column; padding: 0;
    }

    .card-image, .image-placeholder {
      width: 100%; height: auto; aspect-ratio: 16 / 10; border-radius: 12px 12px 0 0;
    }
    
    .card-content { padding: 1.5rem; }
    .card-title-link h2 { font-size: 1.5rem; }
    .card-content p { font-size: 1rem; }
    .card-content time { font-size: 0.875rem; }
  }
</style>