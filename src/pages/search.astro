---
// src/pages/search.astro
import Layout from "../layouts/main/Layout.astro";
import SearchBar from "../components/SearchBar/SearchBar.astro";
---

<Layout
  title="Resultados de Búsqueda"
  description="Encuentra artículos en el sitio."
>
  <div class="search-results-container">
    <SearchBar size="small" />

    <h1 id="search-title">Realiza una búsqueda</h1>
    <div id="results-grid" class="posts-grid"></div>
    <p id="no-results-message" class="no-results" hidden>
      No se encontraron artículos que coincidan con tu búsqueda. ¡Intenta con
      otras palabras!
    </p>
  </div>
</Layout>

<!-- Cambiamos a JavaScript simple, quitando lang="ts" -->
<script>
  const fuseOptions = {
    threshold: 0.4,
    minMatchCharLength: 2,
    keys: [
      { name: "title", weight: 10 },
      { name: "tags", weight: 5 },
      { name: "description", weight: 2 },
    ],
  };

  /**
   * Genera el HTML para un solo PostCard.
   * @param {object} post El objeto del post a renderizar.
   * @returns {string} El string HTML de la tarjeta.
   */
  function createPostCardHTML(post) {
    const pubDate = new Date(post.pubDate).toLocaleDateString("es-ES", {
      year: "numeric",
      month: "long",
      day: "numeric",
    });
    const isoDate = new Date(post.pubDate).toISOString();
    const { coverImage, externalUrl, slug, title, description } = post;

    const imageHTML = coverImage
      ? `<img src="${coverImage}" alt="Portada de ${title}" style="width: 80px; height: 80px; object-fit: cover; border-radius: 8px; background-color: #333;" loading="lazy" decoding="async"/>`
      : `<div style="width: 80px; height: 80px; border-radius: 8px; background-color: #333;"></div>`;

    const externalLinkHTML = externalUrl
      ? `<div style="margin-top: 0.75rem;"><a href="${externalUrl}" target="_blank" rel="noopener noreferrer" style="display: inline-block; background-color: #333; color: #ffc107; text-decoration: none; padding: 0.4rem 0.8rem; border-radius: 6px; font-size: 0.8rem; font-weight: bold; border: 1px solid #555;">Visitar Página →</a></div>`
      : "";

    return `
      <div style="display: flex; gap: 1rem; background-color: #2a2a2a; border: 1px solid #444; border-radius: 12px; padding: 1rem;">
        <a href="/blog/${slug}" style="flex-shrink: 0;" aria-label="Leer más sobre ${title}">${imageHTML}</a>
        <div style="display: flex; flex-direction: column; justify-content: center;">
          <a href="/blog/${slug}" style="text-decoration: none;"><h2 style="font-size: 1.25rem; margin: 0 0 0.5rem 0; color: #ffc107;">${title}</h2></a>
          <p style="font-size: 0.9rem; color: #ccc; margin: 0; line-height: 1.5;">${description}</p>
          <time datetime="${isoDate}" style="font-size: 0.8rem; color: #aaa; margin-top: 0.5rem;">${pubDate}</time>
          ${externalLinkHTML}
        </div>
      </div>`;
  }

  /**
   * Función principal que se ejecuta para realizar la búsqueda.
   */
  async function runSearch() {
    const searchTitle = document.getElementById("search-title");
    const resultsGrid = document.getElementById("results-grid");
    const noResultsMessage = document.getElementById("no-results-message");
    const searchInput = document.querySelector('.search-wrapper--small .search-input');

    if (!searchTitle || !resultsGrid || !noResultsMessage) {
      return;
    }

    const searchTerm = new URLSearchParams(window.location.search).get("q")?.trim() || "";

    if (searchInput) {
      searchInput.value = searchTerm;
    }

    if (!searchTerm) {
      searchTitle.textContent = "Realiza una búsqueda";
      resultsGrid.innerHTML = "";
      noResultsMessage.hidden = true;
      return;
    }

    searchTitle.textContent = `Resultados para: "${searchTerm}"`;

    const Fuse = (await import("fuse.js")).default;
    const response = await fetch("/search.json");
    const allPosts = await response.json();
    const fuse = new Fuse(allPosts, fuseOptions);
    const results = fuse.search(searchTerm);

    resultsGrid.innerHTML = "";
    noResultsMessage.hidden = true;

    if (results.length > 0) {
      resultsGrid.innerHTML = results.map((result) => createPostCardHTML(result.item)).join("");
    } else {
      noResultsMessage.hidden = false;
    }
  }

  // Ejecutamos en la carga inicial
  runSearch();

  // Y volvemos a ejecutar después de CADA transición de página de Astro
  document.addEventListener("astro:after-swap", runSearch);
</script>

<style lang="scss">
  /* Tus estilos no necesitan cambios */
  .search-results-container { width: 100%; max-width: 1200px; margin: 2rem auto; padding: 0 1rem; min-height: 50vh; }
  h1 { font-size: 2.5rem; margin-bottom: 2rem; text-align: center; text-transform: uppercase; color: #fff; word-break: break-all; }
  .no-results { color: #ccc; text-align: center; font-size: 1.2rem; padding: 2rem; background-color: #2a2a2a; border-radius: 12px; }
  .posts-grid { display: grid; gap: 1.5rem; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); }
</style>