// src/styles/global.scss
@use 'variables' as var;

// --- VARIABLES GLOBALES CSS ---
// Usar variables CSS nativas es una excelente pr√°ctica para compartir valores entre SCSS y JS si es necesario.
:root {
  --sidebar-width: 280px;
}

// --- RESET Y ESTILOS BASE ---
// Aplicamos estilos a html y body para asegurar un comportamiento predecible en todos los navegadores.

html {
  box-sizing: border-box; // Un reset moderno y √∫til.
   overflow-x: hidden; // <-- A√ëADE ESTA L√çNEA
}

*, *:before, *:after {
  box-sizing: inherit;
}

// En tu archivo src/styles/global.scss

body {
  margin: 0;
  min-height: 100dvh;
  // max-height: 100vh; // Esto puede causar problemas si el contenido es m√°s alto que la pantalla. Considera quitarlo.
  width: 100%;
   overflow-x: hidden; // <-- A√ëADE ESTA L√çNEA TAMBI√âN POR SEGURIDAD

  font-family: var.$font-family;
  color: white; 

  background-color: var.$secondary-color;
  background-image: url('../assets/BackgroundWeb/Background.png');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;

  // --- üëá A√ëADE ESTAS DOS L√çNEAS ---
  display: flex;
  flex-direction: column;
}

// --- üëá A√ëADE ESTA NUEVA REGLA PARA MAIN ---
main {
  flex-grow: 1; // ¬°Esta es la clave! Le dice a <main> que crezca y ocupe todo el espacio vertical disponible.

  // Opcional, pero recomendado para centrar el contenido dentro del main:
  display: flex;
  flex-direction: column;
  justify-content: center; // Centra el contenido verticalmente
  align-items: center;    // Centra el contenido horizontalmente
}